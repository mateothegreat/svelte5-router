name: ðŸš€ Release
run-name: ðŸš€ Release (${{ github.event.inputs.label }})
on:
  workflow_dispatch:
    inputs:
      label:
        description: "The label to add to the release"
        required: false
        default: "standard release"
        type: string
      build_docs:
        description: "Release the docs?"
        required: false
        default: false
        type: boolean
      build_demo:
        description: "Release the demo?"
        required: false
        default: false
        type: boolean
concurrency:
  group: release
  cancel-in-progress: true
jobs:
  release:
    name: ðŸš€ Release ${{ github.event.inputs.label }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      # [setup] authenticate with the cicd app to get proper credentials for pushing to the repo later.
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: cicd app auth
        id: app
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        with:
          app-id: ${{ secrets.CICD_APP_ID }}
          private-key: ${{ secrets.CICD_APP_PRIVATE_KEY }}
      # [setup] checkout the repo.
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      # [setup] setup node.js.
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20.x
      # [setup] configure git for later changelog generation, commit, and the finalpush.
      - name: configure git
        run: |
          git config --global user.name "mateothegreat[bot]"
          git config --global user.email "mateothegreat[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ steps.app.outputs.token }}@github.com/${{ github.repository }}.git
      # [build] install dependencies first.
      - name: install
        run: npm install
      # [build] build the package which outputs to the dist/ directory.
      - name: build
        run: npm run build
      # [version] bump the version
      - name: npm version
        id: version
        run: |
          version=$(npm version patch --no-git-tag-version --json | sed 's/^v//' || {
            echo "npm version patch failed, git is dirty"
            exit 1
          })
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "version is now: $version"
      # [version] generate the new changelog.
      - name: generate changelog
        uses: orhun/git-cliff-action@98c93442bb05a455a77bee982867857ae748eeea
        id: git-cliff
        with:
          config: ./docs/cliff.toml
          args: --tag ${{ steps.version.outputs.version }}
        env:
          OUTPUT: docs/changelog.md
      # [version] commit the changelog and package.json.
      - name: commit
        run: |
          git add docs/changelog.md package.json
          git commit -am "chore(release): update of changelog and bumping package.json for ${{ steps.version.outputs.version }}"
          git push origin HEAD:main
          git tag -a ${{ steps.version.outputs.version }} -m "release: ${{ steps.version.outputs.version }}"
          git push origin ${{ steps.version.outputs.version }}
      # [publish] prepare to publish by setting up credentials.
      - name: write to .npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" > ~/.npmrc
      # [publish] release publicly only if the build was successful above.
      - name: publish
        working-directory: dist
        run: |
          cp ../package.json .
          npm publish --access public
      # [publish] create a github release.
      - name: create github release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          body: ${{ steps.git-cliff.outputs.content }}
          tag_name: ${{ steps.version.outputs.version }}
  docs:
    if: ${{ github.event.inputs.build_docs == true }}
    needs: release
    permissions:
      id-token: write
      pages: write
    uses: ./.github/workflows/docs.yaml
  demo:
    if: ${{ github.event.inputs.build_demo == true }}
    needs: release
    uses: ./.github/workflows/demo.yaml
    secrets: inherit
  notify:
    if: always()
    continue-on-error: true
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: Ilshidur/action-discord@ad5235de713df3ef38022185499b02ffe93b7efe
        with:
          status: ${{ needs.build.result }}
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
